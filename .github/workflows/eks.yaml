name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: group8

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push backend image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: doctor-office-backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./doctor-office-backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Build, tag, and push frontend image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: doctor-office-frontend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./doctor-office-frontend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kubeconfig
      run: aws eks get-token --cluster-name ${{ env.EKS_CLUSTER_NAME }} | kubectl apply -f -

    - name: Deploy to EKS
      run: |
        # Update backend deployment
        sed -i 's|image: .*|image: ${{ steps.login-ecr.outputs.registry }}/doctor-office-backend:${{ github.sha }}|' ./doctor-office-backend/k8-manifests/deployment.yaml
        kubectl apply -f ./doctor-office-backend/k8-manifests/deployment.yaml

        # Update frontend deployment
        sed -i 's|image: .*|image: ${{ steps.login-ecr.outputs.registry }}/doctor-office-frontend:${{ github.sha }}|' ./doctor-office-frontend/k8-manifests/deployment.yaml
        kubectl apply -f ./doctor-office-frontend/k8-manifests/deployment.yaml

        # Wait for deployments to be ready
        kubectl rollout status deployment/doctor-office-backend -n default
        kubectl rollout status deployment/doctor-office-frontend -n default
