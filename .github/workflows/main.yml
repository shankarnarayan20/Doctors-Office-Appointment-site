name: CI/CD Pipeline
on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 038462778419.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY_1: final/backend
  ECR_REPOSITORY_2: final/frontend
  CLUSTER_NAME: final
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::038462778419:role/github-actions-role
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kube config
      run: |
        aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    # Build and push Backend with SHA
    - name: Build and push Backend
      id: build-backend
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_1:latest -f doctor-office-backend/Dockerfile doctor-office-backend/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_1:latest
        BACKEND_SHA=$(aws ecr describe-images --repository-name final/backend --image-ids imageTag=latest --query 'imageDetails[0].imageDigest' --output text)
        echo "backend_sha=$ECR_REGISTRY/$ECR_REPOSITORY_1@${BACKEND_SHA}" >> $GITHUB_OUTPUT

    # Build and push Frontend with SHA
    - name: Build and push Frontend
      id: build-frontend
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_2:latest -f doctor-office-frontend/Dockerfile doctor-office-frontend/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_2:latest
        FRONTEND_SHA=$(aws ecr describe-images --repository-name final/frontend --image-ids imageTag=latest --query 'imageDetails[0].imageDigest' --output text)
        echo "frontend_sha=$ECR_REGISTRY/$ECR_REPOSITORY_2@${FRONTEND_SHA}" >> $GITHUB_OUTPUT

    # - name: Update EKS Deployment for Backend
    #   run: |
    #     kubectl set image deployment/backend backend=${{ steps.build-backend.outputs.backend_sha }}

    # - name: Update EKS Deployment for Frontend
    #   run: |
    #     kubectl set image deployment/frontend frontend=${{ steps.build-frontend.outputs.frontend_sha }}